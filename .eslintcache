[{"/home/gderus/Dev/giffy/src/index.js":"1","/home/gderus/Dev/giffy/src/App.js":"2","/home/gderus/Dev/giffy/src/reportWebVitals.js":"3","/home/gderus/Dev/giffy/src/services/getGifs.js":"4","/home/gderus/Dev/giffy/src/components/Gif.js":"5","/home/gderus/Dev/giffy/src/components/ListOfGifs.js":"6"},{"size":500,"mtime":1610437467498,"results":"7","hashOfConfig":"8"},{"size":496,"mtime":1610520235956,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1610437467498,"results":"10","hashOfConfig":"8"},{"size":657,"mtime":1610520197463,"results":"11","hashOfConfig":"8"},{"size":257,"mtime":1610519032506,"results":"12","hashOfConfig":"8"},{"size":754,"mtime":1610520708685,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"rncml2",{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/gderus/Dev/giffy/src/index.js",[],["29","30"],"/home/gderus/Dev/giffy/src/App.js",["31","32","33"],"/home/gderus/Dev/giffy/src/reportWebVitals.js",[],"/home/gderus/Dev/giffy/src/services/getGifs.js",["34"],"const apiKey = 'xqgUeod9MHgrOGm39QdMdpxDNUFmg4W0';\n\nexport default function getGifs({ keyword = 'morty'} = {}) {\n\n    const apiUrl=`https://api.giphy.com/v1/gifs/search?api_key=xqgUeod9MHgrOGm39QdMdpxDNUFmg4W0&q=${keyword}&limit=25&offset=0&rating=g&lang=en`\n    console.log('url', apiUrl)\n    return fetch(apiUrl)\n    .then(res => res.json())\n    .then(response => {\n        console.log(response)\n        const { data } = response;\n        const gifs = data.map(image => {\n            const {images, title, id} = image; \n            const url = images.downsized_medium.url;\n            return { title, id, url }\n        });\n\n        return gifs ;\n\n    })\n}","/home/gderus/Dev/giffy/src/components/Gif.js",["35","36"],"import React from 'react';\n\nfunction Gif({title, id, url}) {\n    return (\n    <li key={id}>\n        <a href=\"`#${id}`\">\n          <span>{id}</span>\n          <span>{title}</span>\n          <img src={url}/>\n        </a>\n    </li>\n    )\n}\n\nexport default Gif;","/home/gderus/Dev/giffy/src/components/ListOfGifs.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":8,"nodeType":"43","messageId":"44","endLine":1,"endColumn":12},{"ruleId":"41","severity":1,"message":"45","line":2,"column":17,"nodeType":"43","messageId":"44","endLine":2,"endColumn":25},{"ruleId":"41","severity":1,"message":"46","line":2,"column":27,"nodeType":"43","messageId":"44","endLine":2,"endColumn":36},{"ruleId":"41","severity":1,"message":"47","line":1,"column":7,"nodeType":"43","messageId":"44","endLine":1,"endColumn":13},{"ruleId":"48","severity":1,"message":"49","line":6,"column":17,"nodeType":"50","messageId":"51","endLine":6,"endColumn":27},{"ruleId":"52","severity":1,"message":"53","line":9,"column":11,"nodeType":"54","endLine":9,"endColumn":27},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'apiKey' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]